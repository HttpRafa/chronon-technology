plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.resourcefulbees.com/repository/maven-public/" }
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"chronontech" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runs {
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${project.modid}"

			runDir "build/datagen"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Dependencies
	// TODO: modApi "com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-${project.minecraft_version}:${project.resourcefulconfig_version}"
	modApi "com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.20:${project.resourcefulconfig_version}"

	// Extra dependencies
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"

	// Runtime
	modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"

	compileOnly "org.projectlombok:lombok:${project.lombok_version}"
	annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}